<!--===========================================================================
PENTAHO CORPORATION PROPRIETARY AND CONFIDENTIAL

Copyright 2002 - 2014 Pentaho Corporation (Pentaho). All rights reserved.

NOTICE: All information including source code contained herein is, and
remains the sole property of Pentaho and its licensors. The intellectual
and technical concepts contained herein are proprietary and confidential
to, and are trade secrets of Pentaho and may be covered by U.S. and foreign
patents, or patents in process, and are protected by trade secret and
copyright laws. The receipt or possession of this source code and/or related
information does not convey or imply any rights to reproduce, disclose or
distribute its contents, or to manufacture, use, or sell anything that it
may describe, in whole or in part. Any reproduction, modification, distribution,
or public display of this information without the express written authorization
from Pentaho is strictly prohibited and in violation of applicable laws and
international treaties. Access to the source code contained herein is strictly
prohibited to anyone except those individuals and entities who have executed
confidentiality and non-disclosure agreements or other agreements with Pentaho,
explicitly covering such access.
============================================================================-->
<project name="pdi-hcp-plugin" default="default" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
  <property name="bin.dir" value="${basedir}/bin"/>
  <property name="stage.dir" value="${bin.dir}/stage"/>
  <property name="approot.stage.dir" value="${stage.dir}/hdi-hcp-plugin"/>

  <property name="subfloor-ee.parent.file" value="subfloor-pkg.xml" />
  <import file="build-res/subfloor-ee.xml" />

  <description>
    pdi-hcp-plugin plugin build file
  </description>

  <!-- Setup the compile classpath -->
  <path id="classpath">
    <fileset dir="${devlib.dir}">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${lib.dir}">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${swt.lib.dir}/win32">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${provided.lib.dir}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <!-- Setup the classpath used for testing -->
  <path id="test.classpath">
    <pathelement path="${testclasses.dir}" />
    <pathelement path="${classes.dir}" />
    <fileset dir="${devlib.dir}">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${testlib.dir}">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${lib.dir}">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${swt.lib.dir}/win32">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${provided.lib.dir}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <target name="clean-jars" depends="subfloor.clean-jars">
    <delete dir="${swt.lib.dir}"/>
    <delete dir="${provided.lib.dir}"/>
  </target>

  <target name="resolve" depends="subfloor.resolve">
    <ivy:resolve file="${ivyfile}" conf="provided" />
    <ivy:retrieve conf="provided" pattern="${provided.lib.dir}/[module]-[revision](-[classifier]).[ext]" symlink="${ivy.use.symlinks.internal}" /> 
    <ivy:resolve file="${ivyfile}" conf="swtlibs" />
    <ivy:retrieve conf="swtlibs" pattern="${swt.lib.dir}/swtlibs.zip" symlink="${ivy.use.symlinks.internal}" /> 
    <unzip dest="${basedir}" src="${swt.lib.dir}/swtlibs.zip"/>
    <delete file="${swt.lib.dir}/swtlibs.zip"/>
  </target>

  <target name="assemble.copy-libs" depends="subfloor-pkg.assemble.copy-libs">
    <move file="${approot.stage.dir}/lib/${ivy.artifact.id}-${project.revision}.jar" tofile="${approot.stage.dir}/${ivy.artifact.id}-${project.revision}.jar"/>
    <!-- Update the version.xml with the current version of this plugin -->
    <copy file="res/version.xml" todir="${approot.stage.dir}" />
    <replace file="${approot.stage.dir}/version.xml" token="@TRUNK@" value="${project.revision}" />
  </target>

  <target name="assemble" depends="subfloor-pkg.assemble">
    <delete>
      <fileset dir="${approot.stage.dir}" includes="**/.gitignore"/>
    </delete>
  </target>
  
</project>
